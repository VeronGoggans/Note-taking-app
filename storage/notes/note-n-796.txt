<div><br></div><div><br></div><div> <h2>Tech Stack</h2><div><b>Backend</b></div><div> <div><ul><li>FastAPI or Django</li><li>Python</li></ul><div><b>Frontend</b></div><div> <ul><li>Electron</li><li>Vanilla Javascript</li><li>CSS</li><li>HTML5</li></ul><div><b>Persistence</b></div><div> <ul><li>PostgreSQL</li></ul><div><br></div><div> <h2><span style="font-size: 25px; background-color: var(--editor); color: var(--editor-text);">Backend: FastAPI of Django?</span><br></h2></div><div><p>Zowel <strong>FastAPI</strong> als <strong>Django</strong> zijn uitstekende keuzes voor het ontwikkelen van de backend van een Information Security Management System (ISMS) in Python, maar de beste keuze hangt af van je specifieke eisen. Hier is een vergelijking op basis van verschillende factoren om je te helpen beslissen welke het meest geschikt is.</p><h4>1. <strong>Snelheid en prestaties</strong></h4><ul><li><strong>FastAPI</strong>:<ul><li>Zeer <strong>presterend</strong> vanwege de asynchrone aard.</li><li>Gebouwd op <strong>Starlette</strong> en <strong>Pydantic</strong>, ontworpen om <strong>hoge gelijktijdigheid</strong> aan te kunnen en <strong>niet-blokkerende</strong> I/O-operaties uit te voeren.</li><li>Ideaal voor toepassingen die <strong>real-time capaciteiten</strong> nodig hebben of veel verzoeken tegelijkertijd moeten verwerken.</li></ul></li><li><strong>Django</strong>:<ul><li>Standaard <strong>synchroon</strong> (asynchrone functies zijn in ontwikkeling, maar nog niet zo robuust als bij FastAPI).</li><li><strong>Langzamer</strong> in termen van prestaties in vergelijking met FastAPI, vooral bij het verwerken van een groot aantal verzoeken.</li><li>Beter geschikt voor <strong>monolithische applicaties</strong> waarbij snelheid niet de hoogste prioriteit heeft.</li></ul></li></ul><h4>2. <strong>Ontwikkelsnelheid en gebruiksgemak</strong></h4><ul><li><p><strong>FastAPI</strong>:</p><ul><li><strong>Minimalistisch</strong> en ontworpen om snel API’s te bouwen.</li><li>Gemakkelijk te gebruiken met <strong>automatische documentatie</strong> (Swagger/OpenAPI) en type hints uit Python, wat het ontwikkelproces intuïtiever maakt.</li><li>Minder rigide, wat je meer flexibiliteit geeft, maar ook betekent dat je meer beslissingen moet nemen over componenten (zoals databases en authenticatie).</li></ul></li><li><p><strong>Django</strong>:</p><ul><li>Een <strong>batterijen inbegrepen</strong> framework met ingebouwde componenten zoals een <strong>admin paneel</strong>, <strong>ORM</strong>, <strong>authenticatie</strong>, en <strong>templatesysteem</strong>.</li><li>Zeer snel op te zetten voor projecten die veel functionaliteit direct nodig hebben (bijv. gebruikersbeheer, formulieren, enz.).</li><li>Het dwingt een gestructureerde werkwijze af, wat de <strong>ontwikkelsnelheid</strong> kan verhogen bij meer complexe, volledige webapplicaties.</li></ul></li></ul><h4>3. <strong>API-First Design</strong></h4><ul><li><strong>FastAPI</strong>:<ul><li>Specifiek gebouwd voor <strong>API-ontwikkeling</strong> en volgt de <strong>OpenAPI-standaard</strong>, waardoor het automatisch documentatie genereert.</li><li>Beste keuze als je ISMS-systeem <strong>API-gericht</strong> is en voornamelijk gericht is op interactie met externe systemen via <strong>RESTful APIs</strong>.</li></ul></li><li><strong>Django</strong>:<ul><li>Niet van nature ontworpen voor API-first applicaties, maar je kunt de <strong>Django REST Framework (DRF)</strong> gebruiken om robuuste APIs te bouwen.</li><li>Django + DRF kan complexer zijn dan FastAPI als je project voornamelijk om API’s draait, omdat Django oorspronkelijk ontworpen is voor HTML-gebaseerde webapplicaties.</li></ul></li></ul><h4>4. <strong>Database-integratie</strong></h4><ul><li><p><strong>FastAPI</strong>:</p><ul><li>Heeft geen ingebouwde ORM, maar je kunt externe bibliotheken zoals <strong>SQLAlchemy</strong> of <strong>Tortoise ORM</strong> gebruiken.</li><li>Je hebt meer flexibiliteit bij het kiezen van je database, maar het vereist wat meer opzet.</li></ul></li><li><p><strong>Django</strong>:</p><ul><li>Wordt geleverd met een krachtige <strong>ORM</strong> die zeer volwassen is en naadloos werkt met databases zoals PostgreSQL, MySQL en SQLite.</li><li>Als je een goed geïntegreerd databasesysteem wilt met minder opzetwerk, is Django een eenvoudigere keuze.</li></ul></li></ul><h4>5. <strong>Beveiligingsfuncties</strong></h4><ul><li><p><strong>FastAPI</strong>:</p><ul><li>FastAPI biedt <strong>dependency injection</strong> voor het afhandelen van authenticatie en beveiliging, maar je moet veel zelf implementeren.</li><li>Bibliotheken zoals <strong>OAuth2</strong> en <strong>JWT</strong> kunnen eenvoudig worden geïntegreerd, maar het mist de all-in-one oplossing die Django biedt.</li></ul></li><li><p><strong>Django</strong>:</p><ul><li>Django heeft veel ingebouwde beveiligingsfuncties, waaronder <strong>gebruikersauthenticatie</strong>, <strong>CSRF-bescherming</strong>, <strong>SQL-injectiebescherming</strong>, <strong>XSS-bescherming</strong>, en meer.</li><li>Het heeft fijnmazige gebruikersrechtenbeheer, wat je kan helpen snel een veilige backend voor een ISMS-toepassing te ontwikkelen.</li></ul></li></ul><h4>6. <strong>Complexiteit en schaalbaarheid</strong></h4><ul><li><strong>FastAPI</strong>:<ul><li>Ideaal voor <strong>microservices</strong> en <strong>kleinere, lichtgewicht applicaties</strong> vanwege de modulariteit.</li><li>Makkelijk horizontaal schaalbaar (door de asynchrone aard), vooral voor toepassingen met veel gelijktijdige verzoeken.</li></ul></li><li><strong>Django</strong>:<ul><li>Beter geschikt voor <strong>monolithische applicaties</strong> met complexere structuren.</li><li>Django is zeer schaalbaar voor het verwerken van bedrijfslogica, maar minder optimaal voor taken met hoge gelijktijdigheid.</li></ul></li></ul><h4>7. <strong>Gemeenschap en ecosysteem</strong></h4><ul><li><p><strong>FastAPI</strong>:</p><ul><li>Nieuw en snel groeiend, maar het ecosysteem is nog in ontwikkeling in vergelijking met Django.</li><li>Er zijn minder kant-en-klare pakketten beschikbaar vergeleken met Django, dus je zult mogelijk meer functionaliteit zelf moeten ontwikkelen.</li></ul></li><li><p><strong>Django</strong>:</p><ul><li>Een volwassen framework met een <strong>groot ecosysteem</strong> en uitgebreide documentatie.</li><li>Veel pakketten beschikbaar om de functionaliteit snel uit te breiden (bijv. authenticatie, gebruikersbeheer, rechten, formulieren).</li><li>Een grote en actieve gemeenschap, wat het makkelijker maakt om oplossingen voor problemen te vinden.</li></ul></li></ul><h4>8. <strong>Welke te kiezen voor een ISMS?</strong></h4><ul><li><p><strong>FastAPI</strong> is ideaal als:</p><ul><li>Je een <strong>schaalbare API</strong> nodig hebt die interactie heeft met externe systemen of clients.</li><li><strong>Prestaties</strong> en <strong>real-time verwerking</strong> belangrijk zijn.</li><li>Je de voorkeur geeft aan een meer <strong>modulaire en flexibele</strong> setup en bereid bent om componenten zoals ORM en authenticatie zelf op te zetten.</li></ul></li><li><p><strong>Django</strong> is beter als:</p><ul><li>Je een alles-in-één framework nodig hebt met <strong>ingebouwde functionaliteiten</strong> zoals gebruikersbeheer, ORM en beveiligingsmechanismen.</li><li>Je een <strong>grotere, complexere applicatie</strong> bouwt die baat heeft bij de structuur die Django biedt.</li><li>Je sneller wilt ontwikkelen met minder handmatige configuratie.</li></ul></li></ul></div><div><h3><strong>Conclusion:</strong></h3><div>Aangezien Django met meer out of the box features komt die development tijd versnellen, heb ik gekozen om met Django te gaan werken als backend framework.</div></div></div></div></div></div></div><div><br></div><div>En Electron is de keuze geweest omdat het een populair framework is en gebruikt en vertrouwd wordt door veel bedrijven zoals Discord, Slack, Figma enzo. Electron is ook een platform onafhankelijk framework, dus heb je 1 code base voor Windows, Linux en MacOS.</div><div>&nbsp;</div><div><br></div><div style="text-align: center;"><img src="https://pbs.twimg.com/profile_images/730268134460903424/8WOgriUU_400x400.jpg" alt="Electron on X: &quot;Earlier today, the Electron team was alerted to several  recent CVEs filed against an Electron Fuse setting. These reports are  incorrect, and seem to be filed in bad faith."><br></div><div style="text-align: center;"> <a href="https://www.electronjs.org/">Electron JS website</a></div>