<div><br></div><div><br></div><div><div>Deze kernactiviteiten worden iteratief en in verschillende fasen uitgevoerd:</div><div><ul><li><span style="font-weight: bold;">Architecture analysis</span>&nbsp;is het proces van het begrijpen van de omgeving&nbsp;waarop een voorgesteld systeem zal werken en het bepalen van de requirements voor&nbsp;het systeem.</li></ul><ul><li><span style="font-weight: bold;">Architecturale synthises</span> of ontwerp is het proces van het creëren van een architectuur.&nbsp;Op basis van de architectural significant requirements die uit de analyse zijn vastgesteld</li></ul><ul><li><span style="font-weight: bold;">Architecture evaluation</span> is het proces waarbij wordt bepaald hoe goed het huidige&nbsp;ontwerp of een deel ervan voldoet aan de requirements die tijdens de analyse worden afgeleid.</li></ul><ul><li><span style="font-weight: bold;">Architecture evolution</span>&nbsp;is het proces van het onderhouden en aanpassen van een&nbsp;bestaande softwarearchitectuur om te voldoen aan veranderingen in vereisten en&nbsp;omgeving.</li></ul><h2>Architcture Analysis</h2><div><div>is het proces van het begrijpen van de omgeving waarin een voorgesteld systeem zal werken en het bepalen van de requirements voor het systeem.</div><div><br></div><div><span style="font-weight: bold;">Input</span>: Requirements</div><div><span style="background-color: var(--background); color: var(--editor-text); font-weight: bold;">Functional requirements</span></div><div><ul><li><span style="background-color: var(--background); color: var(--editor-text);">Wat het systeem zal doen als het operationeel is.</span></li></ul></div><div><span style="font-weight: bold;">Non functional requirements (kwaliteitseisen):&nbsp;</span></div><div><ul><li>Runtime-gebaseerd, zoals betrouwbaarheid, bruikbaarheid, prestatie-efficiëntie en beveiliging.</li><li>Ontwikkelingstijdbasis, zoals onderhoudbaarheid en overdraagbaarheid.</li></ul></div><div><span style="font-weight: bold;">Architecturale concerns:</span></div><div>Business vereisten en omgevingscontexten van een systeem dat in de loop van de tijd kan veranderen, zoals juridische, sociale, financiële, concurrentie- en technologische problemen.</div><div><br></div><div><span style="font-weight: bold;">Output</span>: <span style="font-weight: bold;">Architectural Significant Requirements</span></div><div>Die eisen die een meetbare impact hebben&nbsp;</div><div>op een software systeem architectuur</div></div></div></div><div><br></div><div><h2>Architcture Synthesis</h2></div><div>is het proces van het creëren van een architectuur.&nbsp;Op basis van de architectural significant requirements die uit de analyse zijn vastgesteld<br></div><div><ol><li>Verzamel informatie over de Architectural significant requirements</li><li>Vind en analyseer alternatieve oplosingen.</li><li>Maak soluties, maak beslissingen.</li><li>Documenteer de soluties/beslissingen.</li></ol></div><div><br></div><div><div><h2>De rol van een architect tijdens projecten</h2></div><div>Analysis &amp; design&nbsp;</div><div><ul><li>Identify achitectural significant requirements</li><li>Architecture notebook</li><li>Prototype</li></ul><div>Communicate with project manager</div></div><div><ul><li>Risks</li><li>Work devision</li></ul><div>Communicate with Analists and stakeholders</div></div><div><ul><li>Shared vision&nbsp;</li><li>Requirements&nbsp;</li></ul><div>Communicate with developers</div></div><div><ul><li>Guidelines&nbsp;</li><li>Prototypes</li><li>Implementation problems</li></ul></div><h2>ISO 25010&nbsp;</h2><div>Beschrijft kwaliteitskenmerken van software.</div><div>Het model van productkwaliteit beschrijft 8 hoofdcategorieen</div><div><ol><li>Functional suitablility&nbsp;</li><li>Performance efficiency&nbsp;</li><li>Compatibility</li><li>Usability</li><li>Reliability&nbsp;</li><li>Security</li><li>Maintainability</li><li>Portability</li></ol><div>Maintainability heeft 5 subcategorieen.</div></div><div><ol><li>Modularity&nbsp;</li><li>Reusability&nbsp;</li><li>Analysability&nbsp;</li><li>Modifiability</li><li>Testability&nbsp;</li></ol><div><div><h2>Waarom is ISO 25010 belangerijk voor een software developer?</h2></div><div><br></div><div><div>Het biedt een internationaal geaccepteerde taal.</div><div><br></div><div>Gebruik het als een checklist met betrekking tot non-functional requirements&nbsp;</div><div><ul><li>Om met je klant of baas te bespreken wat belangrijk is?&nbsp;</li><li>Klanten hebben mogelijk hulp nodig bij het beschrijven van hun niet-functionele vereisten.</li></ul></div><div>Align expectations</div><div><ul><li>Uw focus op kwaliteit komt mogelijk niet overeen met de prioriteit van de klant, of&nbsp;</li><li>Het kan zijn dat uw focus op kwaliteit niet overeenkomt met die van uw baas.</li><li>Sommige kwaliteitseisen kosten extra werk, tijd betekent geld</li></ul></div><div>Gestandaardiseerde terminologie kan je helpen bij het vinden van oplossingen</div><div><ul><li>Welke maatregelen helpen om aan de requirements te voldoen.</li><li>Welke maatregelen hebben een negatief effect op de requirements.</li></ul></div></div></div></div></div>