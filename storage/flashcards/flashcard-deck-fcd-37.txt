# flashcard 0
Wat is een countinuous integration pipeline?
<div><span style="font-style: italic;">"Met een continuous integration pipeline integreer je regelmatig code op een&nbsp;</span></div><div><span style="font-style: italic;">centraal punt, bijvoorbeeld naar een remote repository, vaak reautomatiseerd</span></div><div><span style="font-style: italic;">met Github Actions"</span></div>
wrong

# flashcard 1
Hoe kan een continuous integration pipeline bijdragen aan de  kwaliteitsbewaking van een software project?
<div><span style="font-style: italic;">"Countinuous integration draagt bij aan kwaliteitsbewaking omdat je kunt inzien&nbsp;</span></div><div><span style="font-style: italic;">of bestaande code nog compileert of functionaliteit breekt wanneer nieuwe code wordt toegevoegd."</span></div>
correct

# flashcard 2
Hoare's Triple
<div>Preconditie (P)</div><div><ul><li>Gegeven een bepaalde begintoestand</li></ul></div><div>Actie (Q)</div><div><ul><li>Wanneer ik een bepaalde actie uitvoer&nbsp;</li></ul></div><div>Postconditie</div><div><ul><li>Dan moet er een gewenste eindtoestand komen&nbsp;</li></ul></div>
correct

# flashcard 3
Gherkin
Given, when, then
correct

# flashcard 4
3A's
Arrange, act, assert
correct

# flashcard 5
3A's of extreme programming
<div>Arrange</div><div>Setup de condities voor een bepaalde test case.</div><div><br></div><div>Act</div><div>In deze stap word de test uitgevoerd.</div><div><br></div><div>Assert</div><div>En tot slot word de test gevalideert.</div>
correct

# flashcard 6
Wat is een regressie?
<div>Een regressie gebeurt wanneer nieuwe code ervoor</div><div>zorgt dat oude code niet goed meer functioneert. Geautomatiseerde test kunnen regressies voorkomen door zicht te houden op bepaald kwaliteits aspecten die je verwacht de code te hebben.</div>
correct

# flashcard 7
Test Driven Development (TDD)
<div>Red Green Refactor</div><div><ul><li>Schrijf een test en laat hem falen</li><li>Schrijf de simpelste implementatie die slaagt</li><li>Verbeter de eerste implementatie</li></ul></div><div>Voordelen</div><div><ul><li>Test zijn voorbeelden van hoe het moet werken</li><li>Alle code is gedekt door tests</li><li>Vooral code geschreven die nodig is</li><li>Alle code is testbaar geschreven</li></ul></div>
correct

# flashcard 8
(Unit) Tests should be FIRST
<li>Fast</li><li>Isolated</li><li>Repeatable</li><li>Self-validating</li><li>Timely</li><li>(Thorough)</li>
correct

# flashcard 9
4 fases van een test
<div>1. setup</div><div><ul><li>System under test (SUT) opzetten&nbsp;</li></ul></div><div>2. Exercise&nbsp;</div><div><ul><li>De testen actie uitvoeren op SUT</li></ul></div><div>3. Verify</div><div><ul><li>Resultaat van actie varifieren</li></ul></div><div>4. Tear down&nbsp;</div><div><ul><li>Opruimen system under test SUT</li></ul></div>
correct

# flashcard 10
Integration tests
<div>Met een integratie test word getets of de samenhang van het gehele software systeem&nbsp;</div><div>goed met elkaar samenwerkt.</div>
correct

# flashcard 11
End to End test
Hier wordt de hele interactie van een usecase getest. Van begin tot eind (Controller tot Domain)
correct

# flashcard 12
Mutation testing
<div>Coverage zegt niet of er daadwerkelijk assertions worden gedaan op de&nbsp;</div><div>gedekte code</div><div><br></div><div>Het laat alleen zien welke code wordt aangeraakt tijdens het runnen van&nbsp;</div><div>de tests&nbsp;</div><div><br></div><div>Met mutation tests draai je de tests, maar de testtool maakt aanpassingen&nbsp;</div><div>in de implementatiecode.</div><div>Bijvoorbeeld:&nbsp;</div><div><ul><li>Return Customer wordt return null</li><li>== wordt !=</li><li>&gt; wordt &gt;=</li></ul></div>
correct

# flashcard 13
Acceptance test
<div>Een acceptatietestwordt traditioneel door de eindgebruiker uitgevoerd</div><div>om te controleren of de software voldoet aan de features zoals afgesproken.</div>
correct

# flashcard 14
Agile test pyramid
<div><span style="font-weight: bold;">Unit tests&nbsp;</span></div><div>Veel isolatie, sneller, minder breekbaar</div><div><br></div><div><span style="font-weight: bold;">Service tests</span></div><div>Meer integratie, wat langzamer</div><div><br></div><div><span style="font-weight: bold;">UI tests</span></div><div>erg veel integratie, langaam, breekbaar&nbsp;</div>
correct

